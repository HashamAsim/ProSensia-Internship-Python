# -*- coding: utf-8 -*-
"""Task 11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oW6XU-rw-tgy3JFPmquEil4wKKcYqDwQ
"""

client_text = """
Project: AI-Based Attendance System
Features:
- Face recognition login for staff
- Daily attendance summary via email
- Generate monthly attendance reports
- Alert on consecutive absences
- Mobile-friendly dashboard
Timeline: 3 weeks
Priority: High
"""

with open("client_requirements.txt", "w") as file:
    file.write(client_text.strip())

print("âœ… client_requirements.txt created!")

# Simulate status_tracker.py module
def create_feature_dict(features_list):
    """
    Converts a list of features into a dictionary with status 'Pending'.
    """
    return {feature: "Pending" for feature in features_list}

import json

def read_client_file(filename):
    """
    Reads the client_requirements.txt and parses project info.
    """
    try:
        with open(filename, 'r') as f:
            lines = f.readlines()
    except FileNotFoundError:
        print("File not found!")
        return {}

    project_info = {
        "Project": None,
        "Features": [],
        "Timeline": None,
        "Priority": None
    }

    current_section = None
    for line in lines:
        line = line.strip()
        if line.startswith("Project:"):
            project_info["Project"] = line.split(":", 1)[1].strip()
        elif line.startswith("Features:"):
            current_section = "Features"
        elif line.startswith("Timeline:"):
            project_info["Timeline"] = line.split(":", 1)[1].strip()
            current_section = None
        elif line.startswith("Priority:"):
            project_info["Priority"] = line.split(":", 1)[1].strip()
            current_section = None
        elif line.startswith("-") and current_section == "Features":
            feature = line[1:].strip()
            if feature:
                project_info["Features"].append(feature)

    return project_info

def write_summary_to_txt(info, output_file="project_summary.txt"):
    with open(output_file, "w") as f:
        f.write("ðŸ“˜ Project Summary Report\n")
        f.write("-------------------------\n")
        f.write(f"Project: {info['Project']}\n")
        f.write(f"Timeline: {info['Timeline']}\n")
        f.write(f"Priority: {info['Priority']}\n")
        f.write("Features to Implement:\n")
        for feature in info['Features']:
            f.write(f" - {feature}\n")

    # Print to console
    print(open(output_file).read())

def export_summary_to_json(info, output_file="project_summary.json"):
    feature_status = create_feature_dict(info["Features"])
    summary = {
        "Project": info["Project"],
        "Timeline": info["Timeline"],
        "Priority": info["Priority"],
        "Features": feature_status
    }

    with open(output_file, "w") as f:
        json.dump(summary, f, indent=4)

    # Print JSON preview
    print("JSON Preview:\n")
    print(json.dumps(summary, indent=4))

# Run the interpreter
data = read_client_file("client_requirements.txt")
if data:
    write_summary_to_txt(data)
    export_summary_to_json(data)

from google.colab import files
files.download("project_summary.txt")
files.download("project_summary.json")